uint8_t StdLib[] = {
	0x0c, 0x94, 0x34, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 
	0x0c, 0x94, 0x46, 0x00, 0x0c, 0x94, 0x46, 0x00, 0x11, 0x24, 0x1f, 0xbe, 0xcf, 0xef, 0xd8, 0xe0, 
	0xde, 0xbf, 0xcd, 0xbf, 0x11, 0xe0, 0xa0, 0xe0, 0xb1, 0xe0, 0x01, 0xc0, 0x1d, 0x92, 0xa0, 0x31, 
	0xb1, 0x07, 0xe1, 0xf7, 0x0e, 0x94, 0xf3, 0x00, 0x0c, 0x94, 0x38, 0x01, 0x0c, 0x94, 0x00, 0x00, 
	0x90, 0x91, 0xc0, 0x00, 0x95, 0xff, 0xfc, 0xcf, 0x80, 0x93, 0xc6, 0x00, 0x08, 0x95, 0x80, 0x91, 
	0xc0, 0x00, 0x87, 0xff, 0xfc, 0xcf, 0x80, 0x91, 0xc6, 0x00, 0x90, 0xe0, 0x08, 0x95, 0x80, 0x91, 
	0xc0, 0x00, 0x87, 0xff, 0x04, 0xc0, 0x20, 0x91, 0xc6, 0x00, 0x30, 0xe0, 0x02, 0xc0, 0x20, 0xe0, 
	0x30, 0xe0, 0xc9, 0x01, 0x08, 0x95, 0x86, 0x9f, 0x90, 0x01, 0x87, 0x9f, 0x30, 0x0d, 0x96, 0x9f, 
	0x30, 0x0d, 0x11, 0x24, 0xc9, 0x01, 0x08, 0x95, 0xff, 0x92, 0x0f, 0x93, 0x1f, 0x93, 0xcf, 0x93, 
	0xdf, 0x93, 0x00, 0xd0, 0x00, 0xd0, 0x1f, 0x92, 0xcd, 0xb7, 0xde, 0xb7, 0x8c, 0x01, 0x97, 0xff, 
	0x07, 0xc0, 0x8d, 0xe2, 0x90, 0xe0, 0x0e, 0x94, 0x48, 0x00, 0x11, 0x95, 0x01, 0x95, 0x11, 0x09, 
	0xf1, 0x2c, 0x2a, 0xe0, 0x30, 0xe0, 0xe1, 0xe0, 0xf0, 0xe0, 0xec, 0x0f, 0xfd, 0x1f, 0xef, 0x0d, 
	0xf1, 0x1d, 0xc8, 0x01, 0xb9, 0x01, 0x0e, 0x94, 0x10, 0x01, 0x80, 0x5d, 0x80, 0x83, 0xf3, 0x94, 
	0x8b, 0x01, 0x61, 0x15, 0x71, 0x05, 0x79, 0xf7, 0x08, 0xc0, 0xfe, 0x01, 0xef, 0x0d, 0xf1, 0x1d, 
	0x80, 0x81, 0x90, 0xe0, 0x0e, 0x94, 0x48, 0x00, 0xfa, 0x94, 0xf1, 0x10, 0xf6, 0xcf, 0x0f, 0x90, 
	0x0f, 0x90, 0x0f, 0x90, 0x0f, 0x90, 0x0f, 0x90, 0xdf, 0x91, 0xcf, 0x91, 0x1f, 0x91, 0x0f, 0x91, 
	0xff, 0x90, 0x08, 0x95, 0xcf, 0x93, 0xdf, 0x93, 0xec, 0x01, 0x04, 0xc0, 0x90, 0xe0, 0x0e, 0x94, 
	0x48, 0x00, 0x21, 0x96, 0xfe, 0x01, 0x84, 0x91, 0x81, 0x11, 0xf8, 0xcf, 0xdf, 0x91, 0xcf, 0x91, 
	0x08, 0x95, 0x8a, 0xe0, 0x90, 0xe0, 0x0c, 0x94, 0x48, 0x00, 0x20, 0x91, 0x7c, 0x00, 0x8f, 0x70, 
	0x99, 0x27, 0x20, 0x7f, 0x28, 0x2b, 0x20, 0x93, 0x7c, 0x00, 0x80, 0x91, 0x7a, 0x00, 0x80, 0x64, 
	0x80, 0x93, 0x7a, 0x00, 0x80, 0x91, 0x7a, 0x00, 0x84, 0xff, 0xfc, 0xcf, 0x20, 0x91, 0x78, 0x00, 
	0x30, 0x91, 0x79, 0x00, 0xc9, 0x01, 0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 
	0x99, 0x27, 0x0c, 0x94, 0x48, 0x00, 0x0c, 0x94, 0x4f, 0x00, 0x0c, 0x94, 0x57, 0x00, 0x07, 0xc0, 
	0xef, 0xe9, 0xff, 0xe0, 0x31, 0x97, 0xf1, 0xf7, 0x00, 0xc0, 0x00, 0x00, 0x01, 0x97, 0x00, 0x97, 
	0xb9, 0xf7, 0x08, 0x95, 0x05, 0xc0, 0x25, 0xe0, 0x2a, 0x95, 0xf1, 0xf7, 0x00, 0x00, 0x01, 0x97, 
	0x00, 0x97, 0xc9, 0xf7, 0x08, 0x95, 0x80, 0xe4, 0x80, 0x93, 0x7c, 0x00, 0x87, 0xe8, 0x80, 0x93, 
	0x7a, 0x00, 0x10, 0x92, 0xc5, 0x00, 0x87, 0xe6, 0x80, 0x93, 0xc4, 0x00, 0x86, 0xe0, 0x80, 0x93, 
	0xc2, 0x00, 0x88, 0xe1, 0x80, 0x93, 0xc1, 0x00, 0x17, 0xb8, 0x8f, 0xef, 0x84, 0xb9, 0x89, 0xb1, 
	0x8c, 0x6f, 0x89, 0xb9, 0x00, 0x00, 0x00, 0x00, 0x09, 0x95, 0x80, 0xe0, 0x90, 0xe0, 0x08, 0x95, 
	0x97, 0xfb, 0x07, 0x2e, 0x16, 0xf4, 0x00, 0x94, 0x07, 0xd0, 0x77, 0xfd, 0x09, 0xd0, 0x0e, 0x94, 
	0x24, 0x01, 0x07, 0xfc, 0x05, 0xd0, 0x3e, 0xf4, 0x90, 0x95, 0x81, 0x95, 0x9f, 0x4f, 0x08, 0x95, 
	0x70, 0x95, 0x61, 0x95, 0x7f, 0x4f, 0x08, 0x95, 0xaa, 0x1b, 0xbb, 0x1b, 0x51, 0xe1, 0x07, 0xc0, 
	0xaa, 0x1f, 0xbb, 0x1f, 0xa6, 0x17, 0xb7, 0x07, 0x10, 0xf0, 0xa6, 0x1b, 0xb7, 0x0b, 0x88, 0x1f, 
	0x99, 0x1f, 0x5a, 0x95, 0xa9, 0xf7, 0x80, 0x95, 0x90, 0x95, 0xbc, 0x01, 0xcd, 0x01, 0x08, 0x95, 
	0xf8, 0x94, 0xff, 0xcf
};
size_t StdLibSize = sizeof(StdLib);

for(size_t i = 0; i < StdLibSize; i++)
	binary.Append<1>(StdLib[i]);

LabelLocation(".bss", 0x100);
LabelLocation(".do_clear_bss_loop", 0x7c);
LabelLocation(".do_clear_bss_start", 0x7e);
LabelLocation(".text", 0x0);
LabelLocation("__bad_interrupt", 0x8c);
LabelLocation("__bss_end", 0x110);
LabelLocation("__bss_start", 0x100);
LabelLocation("__ctors_end", 0x68);
LabelLocation("__ctors_start", 0x68);
LabelLocation("__divmodhi4", 0x220);
LabelLocation("__divmodhi4_exit", 0x246);
LabelLocation("__divmodhi4_neg1", 0x238);
LabelLocation("__divmodhi4_neg2", 0x240);
LabelLocation("__do_clear_bss", 0x74);
LabelLocation("__dtors_end", 0x68);
LabelLocation("__dtors_start", 0x68);
LabelLocation("__init", 0x68);
LabelLocation("__mulhi3", 0xc6);
LabelLocation("__stop_program", 0x272);
LabelLocation("__trampolines_end", 0x68);
LabelLocation("__trampolines_start", 0x68);
LabelLocation("__udivmodhi4", 0x248);
LabelLocation("__udivmodhi4_ep", 0x25e);
LabelLocation("__udivmodhi4_loop", 0x250);
LabelLocation("__vector_1", 0x8c);
LabelLocation("__vector_10", 0x8c);
LabelLocation("__vector_11", 0x8c);
LabelLocation("__vector_12", 0x8c);
LabelLocation("__vector_13", 0x8c);
LabelLocation("__vector_14", 0x8c);
LabelLocation("__vector_15", 0x8c);
LabelLocation("__vector_16", 0x8c);
LabelLocation("__vector_17", 0x8c);
LabelLocation("__vector_18", 0x8c);
LabelLocation("__vector_19", 0x8c);
LabelLocation("__vector_2", 0x8c);
LabelLocation("__vector_20", 0x8c);
LabelLocation("__vector_21", 0x8c);
LabelLocation("__vector_22", 0x8c);
LabelLocation("__vector_23", 0x8c);
LabelLocation("__vector_24", 0x8c);
LabelLocation("__vector_25", 0x8c);
LabelLocation("__vector_3", 0x8c);
LabelLocation("__vector_4", 0x8c);
LabelLocation("__vector_5", 0x8c);
LabelLocation("__vector_6", 0x8c);
LabelLocation("__vector_7", 0x8c);
LabelLocation("__vector_8", 0x8c);
LabelLocation("__vector_9", 0x8c);
LabelLocation("__vector_default", 0x0);
LabelLocation("__vectors", 0x0);
LabelLocation("_div", 0x220);
LabelLocation("_etext", 0x274);
LabelLocation("_exit", 0x270);
LabelLocation("adc_read", 0x17a);
LabelLocation("call_user_main", 0x214);
LabelLocation("exit", 0x270);
LabelLocation("integerVar0", 0x10e);
LabelLocation("integerVar1", 0x10c);
LabelLocation("integerVar2", 0x10a);
LabelLocation("integerVar3", 0x108);
LabelLocation("integerVar4", 0x106);
LabelLocation("integerVar5", 0x104);
LabelLocation("integerVar6", 0x102);
LabelLocation("integerVar7", 0x100);
LabelLocation("main", 0x1e6);
LabelLocation("print_char", 0x1b0);
LabelLocation("print_newline", 0x172);
LabelLocation("print_number", 0xd8);
LabelLocation("print_str", 0x154);
LabelLocation("pwm_init", 0x1ac);
LabelLocation("pwm_set", 0x1ae);
LabelLocation("recvchar", 0x1ba);
LabelLocation("serial_recv", 0x9e);
LabelLocation("serial_recv_if_avail", 0xae);
LabelLocation("serial_send", 0x90);
LabelLocation("servo_init", 0x1a8);
LabelLocation("servo_set", 0x1aa);
LabelLocation("waitchar", 0x1b6);
LabelLocation("waitms", 0x1be);
LabelLocation("waitus", 0x1d4);
LabelCurrentLocation("program_start");

Address callUserMainAddress = GetLocationByLabel("call_user_main");
binary.Seek(callUserMainAddress);
deferedInstructions.emplace_back(new DeferedCodeAddressToZ(binary, UnknownAddress("program_start")));
binary.SeekToEnd();


