uint8_t StdLib[] = {
	0x10, 0xc0, 0x1f, 0xc0, 0x1e, 0xc0, 0x1d, 0xc0, 0x1c, 0xc0, 0x1b, 0xc0, 0x1a, 0xc0, 0x19, 0xc0, 
	0x18, 0xc0, 0x17, 0xc0, 0x16, 0xc0, 0x15, 0xc0, 0x14, 0xc0, 0x13, 0xc0, 0x12, 0xc0, 0x11, 0xc0, 
	0x10, 0xc0, 0x11, 0x24, 0x1f, 0xbe, 0xcf, 0xe5, 0xd1, 0xe0, 0xde, 0xbf, 0xcd, 0xbf, 0x20, 0xe0, 
	0xa0, 0xe6, 0xb0, 0xe0, 0x01, 0xc0, 0x1d, 0x92, 0xa0, 0x3a, 0xb2, 0x07, 0xe1, 0xf7, 0x9d, 0xd0, 
	0xf3, 0xc0, 0xde, 0xcf, 0xff, 0x92, 0x0f, 0x93, 0x1f, 0x93, 0xcf, 0x93, 0xdf, 0x93, 0x00, 0xd0, 
	0x00, 0xd0, 0x1f, 0x92, 0xcd, 0xb7, 0xde, 0xb7, 0x8c, 0x01, 0x97, 0xff, 0x05, 0xc0, 0x8d, 0xe2, 
	0x6c, 0xd0, 0x11, 0x95, 0x01, 0x95, 0x11, 0x09, 0x80, 0xe0, 0x2a, 0xe0, 0x30, 0xe0, 0xff, 0x24, 
	0xf3, 0x94, 0xf8, 0x0e, 0xe1, 0xe0, 0xf0, 0xe0, 0xec, 0x0f, 0xfd, 0x1f, 0xe8, 0x0f, 0xf1, 0x1d, 
	0xc8, 0x01, 0xb9, 0x01, 0xaa, 0xd0, 0x80, 0x5d, 0x80, 0x83, 0x8b, 0x01, 0x61, 0x15, 0x71, 0x05, 
	0x11, 0xf0, 0x8f, 0x2d, 0xec, 0xcf, 0xff, 0x20, 0x39, 0xf0, 0xfe, 0x01, 0xef, 0x0d, 0xf1, 0x1d, 
	0x80, 0x81, 0x4b, 0xd0, 0xfa, 0x94, 0xf7, 0xcf, 0x0f, 0x90, 0x0f, 0x90, 0x0f, 0x90, 0x0f, 0x90, 
	0x0f, 0x90, 0xdf, 0x91, 0xcf, 0x91, 0x1f, 0x91, 0x0f, 0x91, 0xff, 0x90, 0x08, 0x95, 0xcf, 0x93, 
	0xdf, 0x93, 0xec, 0x01, 0xfe, 0x01, 0x84, 0x91, 0x88, 0x23, 0x19, 0xf0, 0x36, 0xd0, 0x21, 0x96, 
	0xf9, 0xcf, 0xdf, 0x91, 0xcf, 0x91, 0x08, 0x95, 0x8a, 0xe0, 0x2f, 0xc0, 0x97, 0xb1, 0x8f, 0x70, 
	0x90, 0x7f, 0x89, 0x2b, 0x87, 0xb9, 0x36, 0x9a, 0x34, 0x9b, 0xfe, 0xcf, 0x84, 0xb1, 0x95, 0xb1, 
	0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 0x08, 0x95, 0x1f, 0xc0, 0x3c, 0xd0, 0x90, 0xe0, 
	0x08, 0x95, 0x39, 0xd0, 0x90, 0xe0, 0x08, 0x95, 0x00, 0x97, 0x41, 0xf0, 0xef, 0xec, 0xf7, 0xe0, 
	0x31, 0x97, 0xf1, 0xf7, 0x00, 0xc0, 0x00, 0x00, 0x01, 0x97, 0xf6, 0xcf, 0x08, 0x95, 0x00, 0x97, 
	0x31, 0xf0, 0x22, 0xe0, 0x2a, 0x95, 0xf1, 0xf7, 0x00, 0xc0, 0x01, 0x97, 0xf8, 0xcf, 0x08, 0x95, 
	0xb9, 0x9a, 0xc1, 0x9a, 0xba, 0x98, 0xc2, 0x9a, 0x08, 0x95, 0xc1, 0x98, 0xef, 0xe3, 0xf3, 0xe0, 
	0x31, 0x97, 0xf1, 0xf7, 0x00, 0xc0, 0x00, 0x00, 0x98, 0xe0, 0x80, 0xff, 0x02, 0xc0, 0xc1, 0x9a, 
	0x01, 0xc0, 0xc1, 0x98, 0xef, 0xe3, 0xf3, 0xe0, 0x31, 0x97, 0xf1, 0xf7, 0x00, 0xc0, 0x00, 0x00, 
	0x86, 0x95, 0x91, 0x50, 0x91, 0xf7, 0xc1, 0x9a, 0x8f, 0xe3, 0x93, 0xe0, 0x01, 0x97, 0xf1, 0xf7, 
	0x00, 0xc0, 0x00, 0x00, 0x08, 0x95, 0x80, 0xe0, 0x08, 0x95, 0x17, 0xb8, 0x87, 0xe8, 0x86, 0xb9, 
	0x8a, 0xb3, 0x87, 0x60, 0x8a, 0xbb, 0x81, 0xe0, 0x87, 0xbb, 0x8b, 0xb3, 0x80, 0x6c, 0x8b, 0xbb, 
	0xcf, 0xdf, 0x60, 0x91, 0x9a, 0x00, 0x70, 0x91, 0x9b, 0x00, 0x80, 0x91, 0x9c, 0x00, 0x90, 0x91, 
	0x9d, 0x00, 0x0a, 0xd0, 0x90, 0x93, 0x9f, 0x00, 0x80, 0x93, 0x9e, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x09, 0x95, 0x80, 0xe0, 0x90, 0xe0, 0x08, 0x95, 0x00, 0x24, 0x55, 0x27, 0x04, 0xc0, 0x08, 0x0e, 
	0x59, 0x1f, 0x88, 0x0f, 0x99, 0x1f, 0x00, 0x97, 0x29, 0xf0, 0x76, 0x95, 0x67, 0x95, 0xb8, 0xf3, 
	0x71, 0x05, 0xb9, 0xf7, 0x80, 0x2d, 0x95, 0x2f, 0x08, 0x95, 0x97, 0xfb, 0x07, 0x2e, 0x16, 0xf4, 
	0x00, 0x94, 0x06, 0xd0, 0x77, 0xfd, 0x08, 0xd0, 0x0b, 0xd0, 0x07, 0xfc, 0x05, 0xd0, 0x3e, 0xf4, 
	0x90, 0x95, 0x81, 0x95, 0x9f, 0x4f, 0x08, 0x95, 0x70, 0x95, 0x61, 0x95, 0x7f, 0x4f, 0x08, 0x95, 
	0xaa, 0x1b, 0xbb, 0x1b, 0x51, 0xe1, 0x07, 0xc0, 0xaa, 0x1f, 0xbb, 0x1f, 0xa6, 0x17, 0xb7, 0x07, 
	0x10, 0xf0, 0xa6, 0x1b, 0xb7, 0x0b, 0x88, 0x1f, 0x99, 0x1f, 0x5a, 0x95, 0xa9, 0xf7, 0x80, 0x95, 
	0x90, 0x95, 0xbc, 0x01, 0xcd, 0x01, 0x08, 0x95, 0xf8, 0x94, 0xff, 0xcf
};
size_t StdLibSize = sizeof(StdLib);

for(size_t i = 0; i < StdLibSize; i++)
	binary.Append<1>(StdLib[i]);

LabelLocation(".bss", 0x60);
LabelLocation(".do_clear_bss_loop", 0x36);
LabelLocation(".do_clear_bss_start", 0x38);
LabelLocation(".text", 0x0);
LabelLocation("__bad_interrupt", 0x42);
LabelLocation("__bss_end", 0xa0);
LabelLocation("__bss_start", 0x60);
LabelLocation("__ctors_end", 0x22);
LabelLocation("__ctors_start", 0x22);
LabelLocation("__divmodhi4_exit", 0x1fe);
LabelLocation("__divmodhi4_neg1", 0x1f0);
LabelLocation("__divmodhi4_neg2", 0x1f8);
LabelLocation("__dtors_end", 0x22);
LabelLocation("__dtors_start", 0x22);
LabelLocation("__init", 0x22);
LabelLocation("__stop_program", 0x22a);
LabelLocation("__trampolines_end", 0x22);
LabelLocation("__trampolines_start", 0x22);
LabelLocation("__udivmodhi4_ep", 0x216);
LabelLocation("__udivmodhi4_loop", 0x208);
LabelLocation("__vector_1", 0x42);
LabelLocation("__vector_10", 0x42);
LabelLocation("__vector_11", 0x42);
LabelLocation("__vector_12", 0x42);
LabelLocation("__vector_13", 0x42);
LabelLocation("__vector_14", 0x42);
LabelLocation("__vector_15", 0x42);
LabelLocation("__vector_16", 0x42);
LabelLocation("__vector_2", 0x42);
LabelLocation("__vector_3", 0x42);
LabelLocation("__vector_4", 0x42);
LabelLocation("__vector_5", 0x42);
LabelLocation("__vector_6", 0x42);
LabelLocation("__vector_7", 0x42);
LabelLocation("__vector_8", 0x42);
LabelLocation("__vector_9", 0x42);
LabelLocation("__vector_default", 0x0);
LabelLocation("__vectors", 0x0);
LabelLocation("_etext", 0x22c);
LabelLocation("adc_read", 0xdc);
LabelLocation("call_user_main", 0x1ac);
LabelLocation("main", 0x17a);
LabelLocation("print_char", 0xfa);
LabelLocation("print_newline", 0xd8);
LabelLocation("print_number", 0x44);
LabelLocation("print_str", 0xbe);
LabelLocation("pwm_init", 0xf6);
LabelLocation("pwm_set", 0xf8);
LabelLocation("recvchar", 0x102);
LabelLocation("servo_init", 0xf2);
LabelLocation("servo_set", 0xf4);
LabelLocation("softserial_init", 0x130);
LabelLocation("softserial_recv", 0x176);
LabelLocation("softserial_send", 0x13a);
LabelLocation("var0", 0x9e);
LabelLocation("var1", 0x9c);
LabelLocation("var10", 0x8a);
LabelLocation("var11", 0x88);
LabelLocation("var12", 0x86);
LabelLocation("var13", 0x84);
LabelLocation("var14", 0x82);
LabelLocation("var15", 0x80);
LabelLocation("var16", 0x7e);
LabelLocation("var17", 0x7c);
LabelLocation("var18", 0x7a);
LabelLocation("var19", 0x78);
LabelLocation("var2", 0x9a);
LabelLocation("var20", 0x76);
LabelLocation("var21", 0x74);
LabelLocation("var22", 0x72);
LabelLocation("var23", 0x70);
LabelLocation("var24", 0x6e);
LabelLocation("var25", 0x6c);
LabelLocation("var26", 0x6a);
LabelLocation("var27", 0x68);
LabelLocation("var28", 0x66);
LabelLocation("var29", 0x64);
LabelLocation("var3", 0x98);
LabelLocation("var30", 0x62);
LabelLocation("var31", 0x60);
LabelLocation("var4", 0x96);
LabelLocation("var5", 0x94);
LabelLocation("var6", 0x92);
LabelLocation("var7", 0x90);
LabelLocation("var8", 0x8e);
LabelLocation("var9", 0x8c);
LabelLocation("waitchar", 0xfc);
LabelLocation("waitms", 0x108);
LabelLocation("waitus", 0x11e);
LabelCurrentLocation("program_start");

Address callUserMainAddress = GetLocationByLabel("call_user_main");
binary.Seek(callUserMainAddress);
deferedInstructions.emplace_back(new DeferedCodeAddressToZ(binary, UnknownAddress("program_start")));
binary.SeekToEnd();


